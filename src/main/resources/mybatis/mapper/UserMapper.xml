<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这块等于dao接口的实现  namespace必须和接口的类路径一样-->
<mapper namespace="purple.cas.mapper.UserMapper" >

    <!-- Result Map-->
    <resultMap type="purple.cas.model.User" id="BaseResultMap">
        <result property="id" column="id" />
        <result property="name" column="name" />
        <result property="sex" column="sex" />
        <result property="birs" column="birs" jdbcType="TIMESTAMP"/>
        <result property="message" column="message" jdbcType="CLOB" javaType = "java.lang.String"  typeHandler ="com.southgis.scout.demo.OracleClobTypeHandler"/>
    </resultMap>

    <!-- 表名-->
    <sql id="Tabel_Name">
        cas_user
    </sql>

    <!-- 表中所有列 -->
    <sql id="Base_Column_List" >
        id,name,sex,birs,message
    </sql>

    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        where 1=1
        <trim suffixOverrides=",">
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name like concat(concat('%', '${name}'), '%')
            </if>
            <if test="sex != null and sex != ''">
                and sex like concat(concat('%', '${sex}'), '%')
            </if>
            <if test="birs != null">
                and birs = #{birs}
            </if>
            <if test="message != null">
                and message = #{message}
            </if>
        </trim>
    </sql>

    <!-- 下面的id都和接口UsersMapper中的方法名一样-->

    <!-- 1.新增记录 -->
    <insert id="add" parameterType="Object" >
        <selectKey resultType="int" order="BEFORE" keyProperty="id">
            select seq_t_users_id.nextval as id from dual
        </selectKey>
        insert into t_users(id,name,sex,birs,message) values(#{id},#{name},#{sex},#{birs},#{message,jdbcType=CLOB})
    </insert>

    <!-- 2.根据id修改记录-->
    <update id="update" parameterType="Object" >
        update t_users set name=#{name},sex=#{sex},birs=#{birs},message=#{message} where id=#{id}
    </update>

    <!-- 3.只修改不为空的字段 -->
    <update id="updateBySelective" parameterType="Object" >
        update t_users set
        <trim  suffixOverrides="," >
            <if test="name != null  and name != '' ">
                name=#{name},
            </if>
            <if test="sex != null  and sex != '' ">
                sex=#{sex},
            </if>
            <if test="birs != null  ">
                birs=#{birs},
            </if>
            <if test="message != null  and message != '' ">
                message=#{message},
            </if>
        </trim> where id=#{id}
    </update>

    <!-- 4.根据id进行删除 -->
    <delete id="delete" parameterType="Object">
        delete from t_users where id = #{id}
    </delete>

    <!-- 5.根据id查询 -->
    <select id="queryById" resultMap="BaseResultMap" parameterType="Object">
        select
        <include refid="Base_Column_List" />
        from t_users where id = #{id}
    </select>

    <!-- 6.查询列表，只查询不为空的字段 -->
    <select id="queryBySelective" resultMap="BaseResultMap" parameterType="Object">
        select
        <include refid="Base_Column_List" />
        from t_users
        <include refid="Example_Where_Clause" />
    </select>

    <!-- 7.列表总数 -->
    <select id="queryByCount" resultType="java.lang.Integer" parameterType="Object">
        select count(1) from t_users
        <include refid="Example_Where_Clause" />
    </select>

    <!-- 8.查询列表 -->
    <select id="queryByList" resultMap="BaseResultMap" parameterType="Object">
        select
        <include refid="Base_Column_List" />
        from t_users
        <include refid="Example_Where_Clause"/>
    </select>
</mapper>     